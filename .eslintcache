[{"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/auth/Login.js":"1","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/widgets/navs/landingpagenav.js":"2","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/components/carousel/carousel.js":"3","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/components/tabs/tabscard.js":"4","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/components/tabs/tabs.js":"5","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/app/landingpage.js":"6","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/app/userlandingpage.js":"7","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/auth/signup.js":"8","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/app/movieplayer.js":"9","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/widgets/navs/userlandingpagenav.js":"10"},{"size":4095,"mtime":1613115280800,"results":"11","hashOfConfig":"12"},{"size":3270,"mtime":1613115280872,"results":"13","hashOfConfig":"12"},{"size":6793,"mtime":1613119711427,"results":"14","hashOfConfig":"12"},{"size":4168,"mtime":1613117904743,"results":"15","hashOfConfig":"12"},{"size":261,"mtime":1613116215092,"results":"16","hashOfConfig":"12"},{"size":2614,"mtime":1613118668950,"results":"17","hashOfConfig":"12"},{"size":2655,"mtime":1613118585873,"results":"18","hashOfConfig":"12"},{"size":4912,"mtime":1613117598934,"results":"19","hashOfConfig":"12"},{"size":1390,"mtime":1613119869071,"results":"20","hashOfConfig":"12"},{"size":2955,"mtime":1613120012255,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19zk66y",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/auth/Login.js",["44","45"],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/widgets/navs/landingpagenav.js",[],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/components/carousel/carousel.js",["46"],"import React, {useState, useEffect} from 'react';\nimport { CgSpinnerTwo } from 'react-icons/cg';\nimport axios from \"axios\"\nimport \"./carousel.css\";\nimport { MovieModal } from \"../../components\";\nimport AOS from \"aos\";\nimport 'aos/dist/aos.css';\nimport {Playicon} from \"../../assets\";\nimport { FiPlay } from \"react-icons/fi\";\n\n\nconst CarouselPage = () => {\n\n    AOS.init();\nconst [movies, setMovies] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n    const fetchMovies = async () => {\n        const result = await axios(`https://rewind-test.herokuapp.com/movies/featured-movies`)\n        console.log(result.data.message);\n\n        setMovies(result.data.message);\n        setIsLoading(false);\n    }\n    fetchMovies();\n}, [])\n\nconst [movieModal, setMovieModal] = useState(false);\nconst [selectedMovie, setSelectedMovie] = useState(null);\n\nconst toggleMovieModal = (e, movie) => {\n    setMovieModal(prev => !prev);\n    setSelectedMovie(movie);\n    \n}\n\n\n\n    return  isLoading ? <h1 className=\"spinner\"><CgSpinnerTwo/></h1> : <main>\n        <section className=\"slider\">\n            <h2>\n                Featured\n            </h2>\n          <section className=\"slider-container\">\n                {movies.map(movie => (\n                    <div key={movie._id} className=\"slider-content-container\" data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                        <section className=\"movie-poster\">\n                        <img src={movie.coverpics_url} alt=\"poster\" />\n                        <span className=\"movie-poster-overlay\" >\n                            <button onClick={(e) => toggleMovieModal(e, movie)}><FiPlay/></button>\n                        </span>\n                    </section>\n                        <div className=\"carousel-movie-details-container\">\n                            <h5>\n                                {movie.title}\n                            </h5>\n                            <ul className=\"carousel-movie-details\">\n                                <li>{movie.release_date}</li>\n                                <li>{movie.category}</li>\n                                <li>{movie.length}</li>\n                            </ul>\n                        </div>\n                    </div>\n                ))}\n                <MovieModal movieModal={movieModal} selectedMovie={selectedMovie}  setMovieModal={setMovieModal} />\n\n         </section>\n    </section> \n        </main>\n    \n}\n\nexport {CarouselPage}\n\n\n\nconst RecentUpload = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n    const fetchMovies = async () => {\n        const result = await axios(`https://rewind-test.herokuapp.com/movies/recently-added`)\n        console.log(result.data.message);\n\n        setMovies(result.data.message);\n        setIsLoading(false);\n    }\n    fetchMovies();\n}, [])\n\nconst [movieModal, setMovieModal] = useState(false);\nconst [selectedMovie, setSelectedMovie] = useState(null);\n\nconst toggleMovieModal = (e, movie) => {\n    setMovieModal(prev => !prev);\n    setSelectedMovie(movie);\n    \n}\n\n\n    return  isLoading ? <h1 className=\"spinner\"><CgSpinnerTwo/></h1> : <main>\n        <section className=\"slider\">\n            <h2 id=\"recent-uploads\">\n                Recent Uploads\n            </h2>\n          <section className=\"recent-upload-container\">\n                {movies.map(movie => (\n                    <div key={movie._id} className=\"recent-upload-content-container\" data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                       <section className=\"movie-poster\">\n                        <img src={movie.coverpics_url} alt=\"poster\" />\n                        <span className=\"movie-poster-overlay\" >\n                            <button onClick={(e) => toggleMovieModal(e, movie)}><FiPlay/></button> \n                        </span>\n                    </section>\n                        <div className=\"recent-movie-details-container\">\n                            <h5>\n                                {movie.title}\n                            </h5>\n                            <ul className=\"recent-movie-details\">\n                                <li>{movie.release_date}</li>\n                                <li>{movie.category}</li>\n                                <li>{movie.length}</li>\n                            </ul>\n                        </div>\n                    </div>\n                ))}\n            <MovieModal movieModal={movieModal} selectedMovie={selectedMovie}  setMovieModal={setMovieModal} />\n         </section>\n    </section> \n        </main>\n    \n}\n\nexport {RecentUpload }\n\n\n\n\nconst AllMovies = () => {\n\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\nuseEffect(() => {\n    const fetchMovies = async () => {\n        const result = await axios(`https://rewind-test.herokuapp.com/movies`)\n        console.log(result.data.message);\n\n        setMovies(result.data.message);\n        setIsLoading(false);\n    }\n    fetchMovies();\n}, [])\n\nconst [movieModal, setMovieModal] = useState(false);\nconst [selectedMovie, setSelectedMovie] = useState(null);\n\nconst toggleMovieModal = (e, movie) => {\n    setMovieModal(prev => !prev);\n    setSelectedMovie(movie);\n    \n}\n\n\n    return  isLoading ? <h1 className=\"spinner\"><CgSpinnerTwo/></h1> : <main>\n        <section className=\"slider\">\n            <h2 id=\"recent-uploads\">\n                All Movies\n            </h2>\n          <section className=\"recent-upload-container\">\n                {movies.map(movie => (\n                    <div key={movie._id} className=\"recent-upload-content-container\" data-aos=\"fade-up\" data-aos-duration=\"1000\">\n                      <section className=\"movie-poster\">\n                        <img src={movie.coverpics_url} alt=\"poster\" />\n                        <span className=\"movie-poster-overlay\" >\n                            <button onClick={(e) => toggleMovieModal(e, movie)}><FiPlay/></button> \n                        </span>\n                    </section>\n                        <div className=\"recent-movie-details-container\">\n                            <h5>\n                                {movie.title}\n                            </h5>\n                            <ul className=\"recent-movie-details\">\n                                <li>{movie.release_date}</li>\n                                <li>{movie.category}</li>\n                                <li>{movie.length}</li>\n                            </ul>\n                        </div>\n                    </div>\n                ))}\n            <MovieModal movieModal={movieModal} selectedMovie={selectedMovie}  setMovieModal={setMovieModal} />\n         </section>\n    </section> \n        </main>\n    \n}\n\nexport { AllMovies }","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/components/tabs/tabscard.js",[],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/components/tabs/tabs.js",[],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/app/landingpage.js",["47","48","49","50","51","52","53"],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/app/userlandingpage.js",["54","55","56","57","58","59","60","61"],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/auth/signup.js",["62"],"import React, { useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Google, Facebook, Or, Twitter, Logo } from \"../../assets\";\nimport \"./Sign_up.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\"\nimport swal from \"sweetalert\";\n\nconst SignUp = () => {\n\n  const { register, handleSubmit, errors, watch } = useForm();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n  const emailReg = '/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i';\n  // const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n\n  const onSubmit = (data) => {\n    console.log(data);\n\n    axios.post(\"https://rewind-api.herokuapp.com/users/sign-up\", data).then((d) => {\n      console.log(d);\n      if (d.status === 201) {\n\n        swal({\n          title: \"Success!\",\n          text: \"Check your mailbox for a verification image to verify your account\",\n          type: \"success\",\n          timer: 2000,\n          showConfirmButton: false\n        });\n\n      }\n\n    }).catch(err => alert(err));\n\n  }\n  const validatePassword = async (value) => {\n\n    if (value.length < 6) {\n      return false\n    }\n    else {\n      return true\n    }\n  }\n  const validateConfirmPassword = async (value) => {\n    if (value === password.current) {\n      return true\n    }\n    else {\n      return false\n    }\n  }\n\n  const validateEmail = async (value) => {\n    if (value.pattern === emailReg) {\n      return false\n    }\n    else {\n      return true\n    }\n  }\n\n  return (\n    <>\n      <main className=\"sign-up-info\">\n        <section className=\"d-flex justify-content-center\">\n          <form className=\"mt-5 px-5 py-4 mb-5\" onSubmit={handleSubmit(onSubmit)}>\n            <img className=\"d-flex mx-auto\" src={Logo} alt=\"\" />\n            <h1 className=\"login-header ml-4 \">Sign Up</h1>\n            <h6 className=\" sign-up-text ml-4\">Sign up to get an account</h6>\n\n            <div>\n              <label className=\"login-label mt-3\">Email address</label>\n              <input\n                className=\" login-input\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email address\"\n                ref={register({ required: true, validate: validateEmail })}\n              />\n              {errors.email && <small>This field is required</small>}\n              {errors.email && errors.email.type === \"validate\" && (\n                <small className=\"error\">Enter valid email</small>\n              )}\n            </div>\n            <div>\n\n              <label className=\"login-label\">Password</label>\n              <input\n                className=\" login-input\"\n                name=\"password\"\n                type=\"password\"\n                ref={register({ required: true, validate: validatePassword })}\n                placeholder=\"Enter your password\"\n              />\n              {errors.password && errors.password.type === \"required\" && (\n                <small className=\"error\">This field is required</small>\n              )}\n              {errors.password && errors.password.type === \"validate\" && (\n                <small className=\"error\">Password must have at least 6 characters</small>\n              )}\n            </div>\n            <div>\n              <label className=\"login-label\">Confirm Password</label>\n              <input\n                className=\" login-input\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                ref={register({ required: true, validate: validateConfirmPassword })}\n                placeholder=\"Confirm password\"\n              />\n              {errors.confirmPassword && errors.confirmPassword.type === \"required\" && (\n                <small className=\"error\">This field is required</small>\n              )}\n              {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && (\n                <small className=\"error\">Password does not match</small>\n              )}\n            </div>\n            <button\n              className=\"d-block login-button text-\"\n              type=\"submit\"\n              value=\"Submit\"\n            >\n              <p className=\"mr-4 mt-2\">Sign Up</p>\n            </button>\n\n            <p className=\"or-tag\">\n              <img src={Or} alt=\"\" />\n            </p>\n\n            <div className=\"login-icons text-center mb-2 \">\n              <a href=\"./\">\n                <img src={Facebook} alt=\"\" />\n              </a>\n              <a href=\"./\">\n                <img src={Google} alt=\"\" />\n              </a>\n              <a href=\"./\">\n                <img src={Twitter} alt=\"\" />\n              </a>\n            </div>\n\n            <p className=\"text-footer mt-3 \">\n              Have an account?\n              <Link to=\"/Login\" className=\"click\" href=\"click\">\n                Click here\n              </Link>\n            </p>\n          </form>\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport { SignUp };","/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/pages/app/movieplayer.js",[],"/mnt/c/Users/USER/Documents/Frontend Projects/Rewind-FrontEnd/src/widgets/navs/userlandingpagenav.js",[],{"ruleId":"63","severity":1,"message":"64","line":6,"column":9,"nodeType":"65","messageId":"66","endLine":6,"endColumn":24},{"ruleId":"63","severity":1,"message":"67","line":47,"column":9,"nodeType":"65","messageId":"66","endLine":47,"endColumn":21},{"ruleId":"63","severity":1,"message":"68","line":8,"column":9,"nodeType":"65","messageId":"66","endLine":8,"endColumn":17},{"ruleId":"63","severity":1,"message":"69","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":18},{"ruleId":"63","severity":1,"message":"70","line":2,"column":20,"nodeType":"65","messageId":"66","endLine":2,"endColumn":34},{"ruleId":"63","severity":1,"message":"71","line":2,"column":36,"nodeType":"65","messageId":"66","endLine":2,"endColumn":42},{"ruleId":"63","severity":1,"message":"72","line":2,"column":44,"nodeType":"65","messageId":"66","endLine":2,"endColumn":47},{"ruleId":"63","severity":1,"message":"73","line":19,"column":12,"nodeType":"65","messageId":"66","endLine":19,"endColumn":18},{"ruleId":"63","severity":1,"message":"74","line":20,"column":11,"nodeType":"65","messageId":"66","endLine":20,"endColumn":23},{"ruleId":"63","severity":1,"message":"75","line":24,"column":12,"nodeType":"65","messageId":"66","endLine":24,"endColumn":20},{"ruleId":"63","severity":1,"message":"76","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":13},{"ruleId":"63","severity":1,"message":"69","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},{"ruleId":"63","severity":1,"message":"70","line":3,"column":20,"nodeType":"65","messageId":"66","endLine":3,"endColumn":34},{"ruleId":"63","severity":1,"message":"71","line":3,"column":36,"nodeType":"65","messageId":"66","endLine":3,"endColumn":42},{"ruleId":"63","severity":1,"message":"72","line":3,"column":44,"nodeType":"65","messageId":"66","endLine":3,"endColumn":47},{"ruleId":"63","severity":1,"message":"73","line":20,"column":12,"nodeType":"65","messageId":"66","endLine":20,"endColumn":18},{"ruleId":"63","severity":1,"message":"74","line":21,"column":11,"nodeType":"65","messageId":"66","endLine":21,"endColumn":23},{"ruleId":"63","severity":1,"message":"75","line":25,"column":12,"nodeType":"65","messageId":"66","endLine":25,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":14,"column":49,"nodeType":"79","messageId":"80","endLine":14,"endColumn":50,"suggestions":"81"},"no-unused-vars","'ProtectedRoutes' is defined but never used.","Identifier","unusedVar","'handleLogout' is assigned a value but never used.","'Playicon' is defined but never used.","'TabsCard' is defined but never used.","'TabsActionCard' is defined but never used.","'TabNav' is defined but never used.","'Tab' is defined but never used.","'slider' is assigned a value but never used.","'handleSlider' is assigned a value but never used.","'selected' is assigned a value but never used.","'axios' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["82","83"],{"messageId":"84","fix":"85","desc":"86"},{"messageId":"87","fix":"88","desc":"89"},"removeEscape",{"range":"90","text":"91"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"92","text":"93"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[483,484],"",[483,483],"\\"]